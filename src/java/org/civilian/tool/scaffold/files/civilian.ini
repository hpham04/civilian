!---------------------
! Civilian config file
!---------------------
! It has the syntax of a java.util.Properties file
! (see http://docs.oracle.com/javase/7/docs/api/java/util/Properties.html#load%28java.io.Reader%29)
! '#' and '!' start comment lines.
! We use '!' for explanatory comments and '#' for out-commented values:
! A line beginning with a '#' indicates a config value with a reasonable default.
! If you need a different value than the default, just change the value and uncomment the line  


!-------------------------------------------
! general settings
!-------------------------------------------


! develop flag: controls if development mode (true) or production mode (false) is set   
develop	= true


!--------------------------------------------
! settings for the built-in admin application
!--------------------------------------------
#civ.admin.enabled = develop
#civ.admin.path    = civadmin
#civ.admin.ip      = localhost


!==============================================================================================
! the application config for the !{appId} application
!==============================================================================================

!----------------------------------------------------------------------------------------------
! .class      the application class which implements org.civilian.Application
app.!{appId}.class = !{webPackage}.!{appClass}


!----------------------------------------------------------------------------------------------
! .path       the path (relative to the container context path) where the application is 
!             located. If your container path is /container, then the application 
!             root url is /container/<your app path>. Default is "/"
#app.!{appId}.path = /


!----------------------------------------------------------------------------------------------
! .locales    the list of supported locales
! .messages   defines a MsgBundleFactory
app.!{appId}.locales = !{locales}
!{appMsgsIni}


!----------------------------------------------------------------------------------------------
! .asset.*    configure the asset locations of the application
! if no item defined, the application will have no asset locations
! for a single asset location, define:
!     .asset.location = <definition> 
! for multiple asset locations, define:
!     .asset.location.0 = <definition0> 
!     .asset.location.1 = <definition1> 
!     etc.
! the definition of the asset locations has the following form:
!     <defintion> ::= <location-type> ( ':' <param> )? ( '->' <path>)?
!     <location-type> ::= 'dir' | 'classpath' | 'civassets'  
!     e.g.
!         dir
!         dir:assets
!         dir:c:\files -> /assets
!         res:files 
!         civassets -> /civilian
! The location type 'dir' denotes a directory containing assets. If it has no param it equals
! the directory where the application is deployed, if the param is an relative directory
! then it is the corresponding subdirectory, else it equals the absolute directory denoted
! by the param. 
! The location type 'classpath' is a location for Java resource. It requires a param
! which is used as prefix of the assets.
! The location type 'civassets' is a location for the assets contained in civilian.jar.
! It doesn't have a param.
!
! We serve assets from the container directory = directory of the web application:
app.!{appId}.asset.location = dir
 			

!----------------------------------------------------------------------------------------------
! async       controls if asynchronous requests are permitted
#app.!{appId}.async = true|false, default is false


!----------------------------------------------------------------------------------------------
! connect     controls if a servlet is dynamically created to route requests to the application 
#app.!{appId}.connect = true|false, default is true


!----------------------------------------------------------------------------------------------
! upload.*    keys to configure if and how file upload is enabled, limited and controlled
!             see org.civilian.application.UploadConfig

#app.!{appId}.upload.enabled           = true|false, default is false
#app.!{appId}.upload.dir               = (defaults to "")
#app.!{appId}.upload.maxRequestSize    = (defaults to -1)
#app.!{appId}.upload.maxFileSize       = (defaults to -1)
#app.!{appId}.upload.fileSizeThreshold = (defaults to 0)


!----------------------------------------------------------------------------------------------
! dev.classreload in development mode classes can be reloaded for every request if set to true.
!              By default all classes in packages below the application base packages
!              are included. Use the .exclude and .include entry to explicitly exclude 
!              or include classes in class-reloading 

app.!{appId}.dev.classreload          = true
#app.!{appId}.dev.classreload.exclude = (comma-separated list of packages or classes to exclude) 	
#app.!{appId}.dev.classreload.include = (comma-separated list of packages or classes to include)
 	
